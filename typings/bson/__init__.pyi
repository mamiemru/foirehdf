"""
This type stub file was generated by pyright.
"""

from .codec import *
from .objectid import ObjectId

"""
BSON serialization and deserialization logic.
Specifications taken from: http://bsonspec.org/#/specification
The following types are unsupported, because for data exchange purposes, they're
over-engineered:
    0x06 (Undefined)
    0x0b (Regex - Exactly which flavor do you want? Better let higher level
        programmers make that decision.)
    0x0c (DBPointer)
    0x0d (JavaScript code)
    0x0e (Symbol)
    0x0f (JS w/ scope)
    0x11 (MongoDB-specific timestamp)

For binaries, only the default 0x0 type is supported.
"""
__all__ = ["loads", "dumps"]
def dumps(obj, generator=..., on_unknown=...): # -> bytes:
    """
    Given a dict, outputs a BSON string.

    generator is an optional function which accepts the dictionary/array being
    encoded, the current DFS traversal stack, and outputs an iterator indicating
    the correct encoding order for keys.
    """
    ...

def loads(data): # -> _EmptyClass | list[Any] | dict[Any, Any]:
    """
        Given a BSON string, outputs a dict.
    """
    ...

def patch_socket(): # -> None:
    """
        Patches the Python socket class such that sockets can send and receive BSON
        objects atomically.

        This adds the following functions to socket:

        recvbytes(bytes_needed, sock_buf = None) - reads bytes_needed bytes
        atomically. Returns None if socket closed.

        recvobj() - reads a BSON document from the socket atomically and returns
        the deserialized dictionary. Returns None if socket closed.

        sendobj(obj) - sends a BSON document to the socket atomically.
    """
    ...

