"""
This type stub file was generated by pyright.
"""

from abc import ABCMeta, abstractmethod

"""
Base codec functions for bson.
"""
utc = ...
class MissingClassDefinition(ValueError):
    def __init__(self, class_name) -> None:
        ...
    


class UnknownSerializerError(ValueError):
    def __init__(self, key, value) -> None:
        ...
    


class MissingTimezoneWarning(RuntimeWarning):
    def __init__(self, *args) -> None:
        ...
    


class TraversalStep:
    def __init__(self, parent, key) -> None:
        ...
    


class BSONCoding:
    __metaclass__ = ABCMeta
    @abstractmethod
    def bson_encode(self): # -> None:
        ...
    
    @abstractmethod
    def bson_init(self, raw_values): # -> None:
        ...
    


classes = ...
def import_class(cls): # -> None:
    ...

def import_classes(*args): # -> None:
    ...

def import_classes_from_modules(*args): # -> None:
    ...

def encode_object(obj, traversal_stack, generator_func, on_unknown=...): # -> bytes:
    ...

def encode_object_element(name, value, traversal_stack, generator_func, on_unknown): # -> bytes:
    ...

class _EmptyClass:
    ...


def decode_object(raw_values): # -> _EmptyClass:
    ...

def encode_string(value): # -> bytes:
    ...

def encode_cstring(value): # -> bytes:
    ...

def encode_binary(value, binary_subtype=...):
    ...

def encode_double(value): # -> bytes:
    ...

ELEMENT_TYPES = ...
def encode_double_element(name, value): # -> bytes:
    ...

def encode_string_element(name, value): # -> bytes:
    ...

def encode_value(name, value, buf, traversal_stack, generator_func, on_unknown=...): # -> None:
    ...

def encode_document(obj, traversal_stack, traversal_parent=..., generator_func=..., on_unknown=...): # -> bytes:
    ...

def encode_array(array, traversal_stack, traversal_parent=..., generator_func=..., on_unknown=...): # -> bytes:
    ...

def decode_binary_subtype(value, binary_subtype): # -> UUID:
    ...

def decode_document(data, base, as_array=...): # -> tuple[Any, Any | _EmptyClass | list[Any] | dict[Any, Any]]:
    ...

def encode_document_element(name, value, traversal_stack, generator_func, on_unknown): # -> bytes:
    ...

def encode_array_element(name, value, traversal_stack, generator_func, on_unknown): # -> bytes:
    ...

def encode_binary_element(name, value, binary_subtype=...):
    ...

def encode_boolean_element(name, value): # -> bytes:
    ...

def encode_utc_datetime_element(name, value): # -> bytes:
    ...

def encode_none_element(name, value): # -> bytes:
    ...

def encode_int32_element(name, value): # -> bytes:
    ...

def encode_uint64_element(name, value): # -> bytes:
    ...

def encode_int64_element(name, value): # -> bytes:
    ...

def encode_object_id_element(name, value):
    ...

